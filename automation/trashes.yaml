# Trashes

- alias: Manage trashes trigger
  trigger:
    platform: state
    entity_id: calendar.trashes
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.iris_tv
        color_name: >
          {% set color = state_attr(trigger.entity_id, "message") | regex_replace('#poubelle','') | trim %}
          {% if color == "verte" %}
            green
          {% elif color == "jaune"%}
            gold
          {% elif color == "marron" %}
            saddlebrown
          {% endif %}
    - service: notify.david
      data_template:
        message: >
          {% set color = state_attr(trigger.entity_id, "message") | regex_replace('#poubelle','') | trim %}
          Il faut sortir la poubelle {{ color }} !
        data:
          inline_keyboard:
          - "C'est fait:/trashes_done, Pas ce soir:/trashes_next_time"

- alias: Manages trashes callback - done
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
        data: '/trashes_done'
  action:
    - service: light.turn_off
      data_template:
        entity_id: light.iris_tv
    - service: telegram_bot.edit_message
      data_template:
        message_id: '{{ trigger.event.data.message.message_id }}'
        chat_id: '{{ trigger.event.data.chat_id }}'
        message: '{{ trigger.event.data.message.text }}'
    - service: notify.david
      data_template:
        message: "C'est fait ! ({{ trigger.event.data.from_first }})"

- alias: Manages trashes callback - next_time
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
        data: '/trashes_next_time'
  action:
    - service: light.turn_off
      data_template:
        entity_id: light.iris_tv
    - service: telegram_bot.edit_message
      data_template:
        message_id: '{{ trigger.event.data.message.message_id }}'
        chat_id: '{{ trigger.event.data.chat_id }}'
        message: '{{ trigger.event.data.message.text }}'
    - service: notify.david
      data_template:
        message: "Elle est presque vide, on la sortira la prochaine fois ! ({{ trigger.event.data.from_first }})"

